name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    name: test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo +nightly clippy --all-targets -- -D warnings

      - name: Run tests
        run: cargo +nightly test -- --nocapture

      - name: Install cbindgen (pinned)
        run: cargo install cbindgen --version 0.29.0 --locked

      - name: Generate C header
        run: cbindgen --config cbindgen.toml --crate libagent --output include/libagent.h
      - name: Verify C header up to date
        run: git diff --ignore-cr-at-eol --exit-code -- include/libagent.h

  test-alpine:
    name: test-alpine (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x64
            dockerfile: Dockerfile.alpine-x64
            platform: linux/amd64
          - arch: arm64
            dockerfile: Dockerfile.alpine-arm64
            platform: linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test Alpine library
        run: |
          echo "Building Alpine ${{ matrix.arch }} library with integrated tests..."
          docker buildx build \
            --platform ${{ matrix.platform }} \
            -f ${{ matrix.dockerfile }} \
            -t libagent-alpine-${{ matrix.arch }}-test \
            --load \
            .
          echo "âœ… Alpine ${{ matrix.arch }} build and functional tests passed!"

  coverage:
    name: coverage (ubuntu-latest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools-preview

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo +nightly llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          token: ${{ secrets.CODECOV_API_KEY }}
          fail_ci_if_error: false
